package com.krb.measurement.oldtest.example.demo;

import java.io.*;
import java.util.Iterator;
import java.util.List;


import com.mysql.jdbc.Connection;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import cn.hutool.core.codec.Base64;

public class TTT1111  extends Dependencies{
//	public static SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//	public static String startDate = df.format(new Date());
//	public static String endDate = df.format(new Date(System.currentTimeMillis() - 59 * 24 * 60 * 60 * 1000L));
//	public static String unlockDate = df.format(new Date(System.currentTimeMillis() - 44 * 24 * 60 * 60 * 1000L));
	public static void main(String[] args) throws Exception {
//		String ss = IFCSignUtil.sign("{\\\"itemId\\\":123,\\\"sourceOrderId\\\":\\\"123\\\",\\\"sourceSystemId\\\":\\\"123\\\",\\\"thirdPackageList\\\":[{\\\"packageId\\\":\\\"904\\\",\\\"paramMap\\\":{\\\"taskName\\\":\\\"这是一个测试\\\",\\\"appraiseTime\\\":\\\"2020-10-10\\\",\\\"completionTime\\\":1,\\\"jsonData\\\":[{\\\"DataId\\\":1111111,\\\"AreaCode\\\":\\\"110114\\\",\\\"Project\\\":\\\"丰景高苑\\\",\\\"Address\\\":\\\"丰景高苑1号楼1单元1-1-201\\\",\\\"BuildArea\\\":100}]}}]}","thisissignaturekey");
//		System.out.println(ss);
		// TODO Auto-generated method stub
//		String sql1 = "update biz_item set unlock_date = '"+unlockDate+"', open_date ='"+endDate+"',expire_date ='"+startDate+"',begin_date ='"+endDate+"',end_date ='"+startDate+"',verify_time ='"+endDate+"',reach_time ='"+endDate+"',loan_time ='"+endDate+"',finsh_time ='"+startDate+"',create_time ='"+endDate+"'where item_id=";
//		String sql2 = "update biz_term set open_date ='"+endDate+"',expire_date ='"+startDate+"',begin_date ='"+endDate+"',end_date ='"+startDate+"',verify_time ='"+endDate+"',reach_time ='"+endDate+"',loan_time ='"+endDate+"',finsh_time ='"+startDate+"',create_time ='"+endDate+"'where itemset_id=";
//		String sql3 = "update biz_itemsetpayment set term_bdate ='"+endDate+"',term_edate ='"+startDate+"',pay_time ='"+startDate+"',paid_time ='"+startDate+"',create_time ='"+endDate+"'where itemset_id=";
//		Connection connection = getConnTet();
//		System.out.println(sql1);
//		System.out.println(sql2);
//		System.out.println(sql3);
//		InputStreamReader in = new InputStreamReader(new FileInputStream("p2p.properties"),
//				"UTF-8");
		InputStream in = new FileInputStream(new File("E:\\git2\\src\\main\\java\\com\\krb\\measurement\\oldtest\\example\\demo\\1.jpg"));
		String s = FileToBase64.encodeBase64File1(in);
		System.out.println(s);
//		String a = getJsbankno();
//		System.out.println(a);
//		Properties p = new Properties();
//		p.load(in);
//		System.out.println(p.get("shouxin"));
//		String a = "UEsDBBQABgAIAAAAIQDfpNJsWgEAACAFAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIoolMtuwjAQRfeV+g+Rt1Vi6KKqKgKLPpYtUukHGHsCVv2Sx7z+vhMCUVUBkQpsIiUz994zVsaD0dqabAkRtXcl6xc9loGTXmk3K9nX5C1/ZBkm4ZQw3kHJNoBsNLy9GUw2ATAjtcOSzVMKT5yjnIMVWPgAjiqVj1Ykeo0zHoT8FjPg973eA5feJXApT7UHGw5eoBILk7LXNX1uSCIYZNlz01hnlUyEYLQUiep86dSflHyXUJBy24NzHfCOGhg/mFBXjgfsdB90NFEryMYipndhqYuvfFRcebmwpCxO2xzg9FWlJbT62i1ELwGRztyaoq1Yod2e/ygHpo0BvDxF49sdDymR4BoAO+dOhBVMP69G8cu8E6Si3ImYGrg8RmvdCZFoA6F59s/m2NqciqTOcfQBaaPjP8ber2ytzmngADHp039dm0jWZ88H9W2gQB3I5tv7bfgDAAD//wMAUEsDBBQABgAIAAAAIQAekRq37wAAAE4CAAALAAgCX3JlbHMvLnJlbHMgogQCKKAAAgrJLBasMwDEDvg/2D0b1R2sEYo04vY9DbGNkHCFtJTBPb2GrX/v082NgCXelhR8vS05PQenOcRnXglF3wGpZVDYq9Cdb5XsNb+7x4AJWFvKUxeNZw4gyb5vZm/cojSSnKg4tZFYrPGgaR+IiYzcAT5SpE9uWnC2kiKc/UYySzo55xVdf3mH4zoJkx1dZqSFt7B6o9Rb6GHbrOGX4KZj+xlzMtkI/C3rJdxFTqk7gyjWop9SwabDAvJZyRYqwKGvC80ep6o7+nxYmFLAmhCYkv+3xmXBJa/ueK5hk/Nu8hWbRf4W8bnF1B8wEAAP//AwBQSwMEFAAGAAgAAAAhANZks1H0AAAAMQMAABwACAF3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzIKIEASigAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArJLLasMwEEX3hf6DmH0tO31QQuRsSiHb1v0ARR4/qCwJzfThv69ISevQYLrwcq6Yc8+ANtvPwYp3jNR7p6DIchDojK971yp4qR6v7kEQa1dr6x0qGJFgW15ebJ7Qak5L1PWBRKI4UtAxh7WUZDocNGU+oEsvjY+D5jTGVgZtXnWLcpXndzJOGVCeMMWuVhB39TWIagz4H7Zvmt7ggzdvAzo+UyE/cP+MzOk4SlgdW2QFkzBLRJDnRVZLitAfi2Myp1AsqsCjxanAYZ6rv12yntMu/rYfxu+wmHO4WdKh8Y4rvbcTj5/oKCFPPnr5BQAA//8DAFBLAwQUAAYACAAAACEAcf9upe0FAAC9JAAAEQAAAHdvcmQvZG9jdW1lbnQueG1s1FpLj9s2EL4X6H8wdE/0IinJiB3Ikh3kEGDRbQ89ciXaFlYSBUper3Mu0ADpIaf20BbooQEK9Fqg6KHon+kmf6OkJL/W3l1aawupDmuZj2/mG84Mh/Q+e36dxJ0rwvKIpj1Ff6opHZIGNIzSSU/56svRE1vp5AVOQxzTlPSUBcmV5/3PP3s274Y0mCUkLTocIs278yzoKdOiyLqqmgdTkuD8aRIFjOZ0XDwNaKLS8TgKiDqnLFQNTdfKt4zRgOQ5l+fh9ArnSg0XXMuhhQzP+WQBCNRgillBrtcY+sEgUHVUexfIaADEGRr6LpR5MBRShVY7QKARENdqBwk2Q9pDDjVDMnaRrGZI5i6S3Qxpx52SXQenGUl555iyBBf8K5uoCWaXs+wJB85wEV1EcVQsOKaGljA4Si8baMRnrRASMzwYwVITGpLYDJcotKfMWNqt5z9ZzReqd6v59cdyBpPhX03x6+RQMlcZibktaJpPo2wV4UlTNN45XYJc3UfiKomX4+aZLhkud6UnvzLlGlBG/dr+SVxpfj+irkmsiIBYzZBRYVvmUpOEe+FacCPTbBhXl0wgSwBjBwAFRDLhLzHsGkMN1hEqcCLJ0FjiVKsicKK1YXXJPHZbmQ2AnBwGAZd65Itkg1E2eZzbvmB0lq3RosehvVwnobkoBw7Aqt1/MyTzxylzPsUZz01J0H05SSnDFzHXiDtzh/tjp1wB8Zcvq/goX8l1RyQCpc/LlwsaLsRnxntAN8MMv+SeYwxMQ/McRylbefIvRKtVP7y1y0ul8IueomkQ6NAxVk0+GeNZXIge29eh7SvqLrzp6q7meQMJ+KFmOYa3D77u2QOvA+Q4w5EAOgW8aWrA8Af6ieCBAR13ZMnYvgm8Bl3f8SztGPB1z9lGUynwjJUf58Ui5s7XvcJxT8FmpQ2rOvPXyw4Aqo78tZdvt6n1aHUFyZa6nLFbMhvAzrtl0d7NMxzwkMkYyQm7Ikq/I4YU1UApqWxE00JImUYptw/BeeHmEV4qcJBK/Zs/33/87e2///x88+3fN+/e3Lz7bksdYYzdVbU0aBmGOTzRqu7xI+h4jj0yYHsSDWBD5DpHiTtJiT6EIwBQi1aFNjfqwG1Poqb7wEWWGH6gxCoabAQ4QuMkUbt9QGMqwqyMCa18xMSC74fEE309Raim70sL+yMCIs10Rra5zUt3BwBpli3Bq9q99vByPDhCAvdQXl7FSyazWT4Su6psjtkSMyqf2+a7wMHlhFdBabhlxKZJcFfBU+jw0HO/jvUSyi/HfYo8StSxzHGXEhsr8pBep/Oj/scfv//4+y83v34jsWEhoA0g8GW2D2QjHnLS4bk9/CjhuZ+CoXsGMkcil3z6FCQ8Vt4zDomcFkNU8pHwTtOx9aHnN6jBK1oQAcMWx5tPbFMENrL5wUsEdSNeTU8Em6zucbPDvekoDrHx3MK/oPRS3GSeF5gVXOVIFEyCZIoTLiyYMUbS4muCWRUly/HDNFyNrk49h5I6grFu/vpDho+op7f5vOIyp3cRKr3tIcufiNGHn94c5AES7MsNc4u9jxd3cTfaWMz+hx/eS6Qo6HoaMPQWz1+6NzBHwDjKtYqcRHPousbAulXDn1IiN6juQr/BaajxiQ9A4Hj24yRuH8L+t9n3wSq7orlB53EFazQZ42txxyoRb8AXZVl5cmzrZD5EuuUOGmzWTSUCzx06TmnCliQiHaIBGrSYxSByPcM3W+RoIKi5Q1uEZ1ueowHTh+6p7nj3eQ5EaOQZR7nRl5Oou0PgD1CL6whtz9RMXVQMrcUjdFxn2OYdK/ItF7mNDz6N1chJUJyxA/HP+STR6mu65dQnqMm5uG+fcwfRneq8NOXvyAZ1JZ5NXmEhp6CZ+KUIlENYNJlyJN2uZlzQoqDJujsm443eKcEh4drYsCydx5QW4qtTXb5MZkX5tRbHNyix29b7IzBg1RzS4AUTP8l1i0XGO+IoJXkpir+cRUXAlRauVm1YlXHK1+r3OnX9f0f9/wAAAP//AwBQSwMEFAAGAAgAAAAhADoFzBnhBgAAziAAABUAAAB3b3JkL3RoZW1lL3RoZW1lMS54bWzsWVtrG0cUfi/0Pyz7rui2q4uJHKSVFDexExMrKXkcr0a7Y83uiJmRHRECIXkqhUIhLXlooPSlD6U00EBD+9D/UpeENP0RnZmVtDvSLE5iG0Kxbay5fOfMN+ecOXO0e/nKvQhbh5AyROKWXb5Usi0Y+2SI4qBl3x70Cw3bYhzEQ4BJDFv2DDL7yuann1wGGzyEEbSEfMw2QMsOOZ9sFIvMF8OAXSITGIu5EaER4KJLg+KQgiOhN8LFSqlUK0YAxbYVg0iovTkaIR9af7/8480PT/96+KX4szcXa/Sw+BdzJgd8TPfkClATVNjhuCw/2Ix5mFqHALdssdyQHA3gPW5bGDAuJlp2Sf3Yxc3LxaUQ5jmyGbm++pnLzQWG44qSo8H+UtBxXKfWXupXAMzXcb16r9arLfUpAPB9sdOEi66zXvGcOTYDSpoG3d16t1rW8Bn91TV825W/Gl6Bkqazhu/3vdSGGVDSdNfwbqfZ6er6FShp1tbw9VK769Q1vAKFGMXjNXTJrVW9xW6XkBHBW0Z403X69cocnqKKmehK5GOeF2sROCC0LwDKuYCj2OKzCRwBX+Be//zF69//tLZREIq4m4CYMDFaqpT6par4L38d1VIOBRsQZISTIZ+tDUk6FvMpmvCWfU1otTOQVy9fHj96cfzot+PHj48f/TJfe11uC8RBVu7tj1//++yh9c+v37998o0Zz7J4bWtGONdoffv89Yvnr55+9eanJwZ4m4L9LHyAIsisG/DIukUisUHDAnCfvp/EIAQoK9GOAwZiIGUM6B4PNfSNGcDAgOtA3Y53qMgWJuDV6YFGeC+kU44MwOthpAF3CMEdQo17ui7XylphGgfmxek0i7sFwKFpbW/Fy73pRIQ9Mqn0QqjR3MXC5SCAMeSWnCNjCA1idxHS7LqDfEoYGXHrLrI6ABlNMkD7WjSlQlsoEn6ZmQgKf2u22bljdQg2qe/CQx0pzgbAJpUQa2a8CqYcREbGIMJZ5DbgoYnk3oz6msEZF54OICZWbwgZM8ncpDON7nUg0pbR7Tt4FulIytHYhNwGhGSRXTL2QhBNjJxRHGaxn7GxCFFg7RJuJEH0EyL7wg8gznX3HQQ1d598tm+LNGQOEDkzpaYjAYl+Hmd4BKBJeZtGWoptU2SMjs400EJ7G0IMjsAQQuv2ZyY8mWg2T0lfC0VW2YIm21wDeqzKfgwZtFRtY3AsYlrI7sGA5PDZma0knhmII0DzNN8Y6yHT26fiMJriFftjLZUiKg+tmcRNFmn7y9W6GwItrGSfmeN1RjX/vcsZEzIHHyAD31tGJPZ3ts0AYG2BNGAGAFnbpnQrRDT3pyLyOCmxqVFupB/a1A3FlZonQvFJBdBK6eOeX+kjCoxX3z0zYM+m3DEDT1Po5OWS1fImD7da1HiEDtHHX9N0wTTeheIaMUAvSpqLkuZ/X9LkneeLQuaikLkoZMwi51DIpLWLegC0eMyjtES5z3xGCOM9PsNwm6mqh4mzP+yLQdVRQstHTJNQNOfLabiAAtW2KOGfIx7uhWAilimrFQI2Vx0wa0KYKJzUsFG3nMDTaIcMk9FyefFUUwgAno6LwmsxLqo0nozW6unju6V61QvUY9YFASn7PiQyi+kkqgYS9cXgCSTUzs6ERdPAoiHV57JQH3OviMvJAvK5uOskjES4iZAeSj8l8gvvnrmn84ypb7ti2F5Tcj0bT2skMuGmk8iEYSguj9XhM/Z1M3WpRk+aYp1GvXEevpZJZCU34FjvWUfizFVdocYHk5Y9Et+YRDOaCH1MZiqAg7hl+3xu6A/JLBPKeBewMIGpqWT/EeKQWhhFItazbsBxyq1cqcs9fqTkmqWPz3LqI+tkOBpBn+eMpF0xlygxzp4SLDtkKkjvhcMjax9P6S0gDOXWy9KAQ8T40ppDRDPBnVpxJV3Nj6L2tiU9ogBPQjC/UbLJPIGr9pJOZh+K6equ9P58M/uBdNKpb92TheREJmnmXCDy1jTnj/O75DOs0ryvsUpS92quay5yXd4tcfoLIUMtXUyjJhkbqKWjOrUzLAgyyy1DM++OOOvbYDVq5QWxqCtVb+21Ntk/EJHfFdXqFHOmqIpvLRR4ixeSSSZQo4vsco9bU4pa9v2S23a8iusVSg23V3CqTqnQcNvVQtt1q+WeWy51O5UHwig8jMpusnZffNnHs/nLezW+9gI/WpTal3wSFYmqg4tKWL3AL1dML/AHct62kLDM/Vql36w2O7VCs9ruF5xup1FoerVOoVvz6t1+13Mbzf4D2zpUYKdd9Zxar1GolT2v4NRKkn6jWag7lUrbqbcbPaf9YG5rsfPF58K8itfmfwAAAP//AwBQSwMEFAAGAAgAAAAhACiV7k/NBAAAiA0AABEAAAB3b3JkL3NldHRpbmdzLnhtbLRXbU/jOBD+ftL9hyqfrzRJk/RFW1a0pQursrsicPvZSdzWh2NHttNSTvffb2zHTfforoATEgJnnplnxmPPjPnw8bGknS0WknA28YIz3+tglvOCsPXEu79bdIdeRyrECkQ5wxNvj6X38fz33z7sxhIrBWqyAxRMjst84m2Uqsa9nsw3uETyjFeYAbjiokQKPsW6VyLxUFfdnJcVUiQjlKh9L/T9xGto+MSrBRs3FN2S5IJLvlLaZMxXK5Lj5o+zEC/xa03mPK9LzJTx2BOYQgycyQ2ppGMr38oG4MaRbH+1iW1Jnd4u8F+w3R0XxcHiJeFpg0rwHEsJB1RSFyBhrePoGdHB9xn4brZoqMA88M3qOPL4dQThM4Ikx4+v4xg2HD2wPOYhxet4kgMPaRMbJG8L5ohA4tdRxC4OuS/bHUn6kjO20JJkAglbQc0Bl/n4es24QBmFcOCgO3BWHROd/g1b1n/MEnyeQyE/cV52duMKixxuM3SB0cDraSCD6KA1zPkXrtJaCF6z4gojkP0UXnCuGhhuIF+lCinwO5YVptQ0lZxixCx/gVeopuoOZaniFWhtEew9Cv0GFmgHJp8EKf7EQpEc0bRCOYicahAnjSqRFUX7Ky7IE2cK0Xlrewntbe8sHLXVd7Q/0w6tdr5BAuWwr8b9DFwITp2WbmYCau1bzXJVm5bS2Jkup1cSDPGCi/ulzRyiiOU4BS6Kp3sFraTO7Oo7KdTGxqjzusRoi6cof5AUyc2FbsIGrOmdQMTkwwqM9uVjBa063ZCVusUKGouBUPFXLdWSMHyFyXqjrtmdvhyWR+LF5RLtea2OQk5ta4cNMlRiu8NDu77hBfReMBXk5dddGzRHdpyb/zrikH04BGwCTNWeQtKYSskTvmDFZ9gFAUab4bdH8KsAMNOev0K93e0rvMAIsggj732cmTNbUFLdEKgecc0KqL93c0ZWKyzAAYGKvIGyI4LvTJ5tSb+XX7hh30EZ2l0frmz+MOVK8fJqX20g1//vJE0x947rDN4xhXSLW+hFB1X/0h+MwpmNVKMt4vtRHF6cQoIh/JxEQj8aRPNTSJxE4XB6CkmCQTCLTiLDZDRrCuNHZDBP4lHThn5EhkkUzE+yDedBPDwZ2yiIB5f9k8gsXiQnkZkfj4Yn8zb3g8HoJNLmunc4k3KsX0jfhFvpwu6U1mKGykwQ1LnRb6ie1sjEw5Qwh2cYRh8+RtI6c2C3awFZIkoXcMUcYK5HaXr9HK/Mmt4gsW55Gw1xUgrT6fOBS09GLD7BjKssuhOosgXrVIIoaiwJg25bOrmss9RZMRjWRxAMzK9bYfLUpmc3VlAApvEtUTvrMOvep/rqYyTVhSRo4j1turMvTe1Rkeq6wTeoqmz5Zetg4lHd8ANtpuCrgNe3+cjWYYOFBgstZj5QrjcL2s2ilYVOdqTXd7J+K4ucLGplsZPFrSxxskTLNtBwBbwRHqATuKWWrzilfIeLqxZ/JrJJKHBO4BKk+zJrp/OZxSiR0JoqGOSKC4f9YbAggumZX+t3UWTl4WLQHyShrYcgNg8AZboXpPYWr6ZI4qLBnGlsTf/2w36yGM763dF0nnShGwy6o4so7Cb9eNQfTPv9KEj+aUrD/Qt1/i8AAAD//wMAUEsDBBQABgAIAAAAIQCdbQwtiQEAAOgCAAARAAgBZG9jUHJvcHMvY29yZS54bWwgogQBKKAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEkrtOwzAUQHck/iHynthJebRRmkqAOoGERBGIzdiXYpo4lu0SsrIwM/EFzPwViL/ASdqUoEps93F8dH3tZPKUZ94jaCMKOUZhQJAHkhVcyPkYXc6m/hB5xlLJaVZIGKMKDJqkuzsJUzErNJzrQoG2AoznTNLETI3RvbUqxtiwe8ipCRwhXfOu0Dm1LtVzrChb0DngiJADnIOlnFqKa6GvOiNaKTnrlGqps0bAGYYMcpDW4DAI8Ya1oHOz9UDT+UXmwlYKtqLrZkc/GdGBZVkG5aBB3fwhvj47vWiu6gtZ74oBShPOYitsBmmCN6GLzPL2AZhty13iYqaB2kKn3y+v3tfzx+fbe4Osy/XCF1CVhebGHe5lDuNgmBbKumds1b2CozNq7Jl71zsB/KhK6eiAjA4bz59ODWt4FPWPSMOoQbo8We23HQu45/YSt1tcd64GxyezKUojEhGfDP2QzMJBvL8XE3JTT9Y7vxHmqwn+NY78aDgjYbwf9Y1rQbuc/t9MfwAAAP//AwBQSwMEFAAGAAgAAAAhAOWEDpsJAgAAOAYAABIAAAB3b3JkL2ZvbnRUYWJsZS54bWzcktFumzAUhu8n7R2Q7xsMJJSikqpNG2nS1Iupk3brGAPWsI1sJzSPsIfZC+xmj9PX2MFAGjWbFnY5EGD+4/Od49++vnkWtbdj2nAlMxTMMPKYpCrnsszQ56f1RYI8Y4nMSa0ky9CeGXSzfP/uuk0LJa3xIF+aVNAMVdY2qe8bWjFBzEw1TEKwUFoQC7+69AXRX7fNBVWiIZZveM3t3g8xjtGA0edQVFFwyu4V3Qomrcv3NauBqKSpeGNGWnsOrVU6b7SizBhYs6h7niBcHjDB/AQkONXKqMLOYDFDRw4F6QF2I1G/AhbTAOEJIKbseRojGRg+ZB5zeD6NEx84PD/i/FszRwDDpiEWYx9mL7oVCZp+KKXSZFMDCfbIA5s9B+7e0G33cUOYvhzOq9emkghIuGey/MKJdBFS20dQIbgjdYZevn97+fET+V2oIVIZFowh3G1vjDGO4Dvc/URaEW1YV8BNTOJeLojg9X5UydaqgcstrUZ5RzTv1tGHDC8hsDUbnKFbKIXDuzXqlSBDUbJaX67Wt4MSQk/uCuJBiUYF406hjgM/c3gchzrOYQ7U9HtzTkx64oIZ75G13iclBq9ODQnBkAgvoMACxhGe/9aQvtJbQ7TjTnHkoTPkYX3kyAqUy2Rx99YRfPUXR8C0nnO+I/3R8D7ysrJ/sON/Ph/DwCx/AQAA//8DAFBLAwQUAAYACAAAACEACe8kaK4BAADDBAAAFAAAAHdvcmQvd2ViU2V0dGluZ3MueG1snJTdTuMwEIXvkfYdIt/TJCyEKqJFqhArpNUK8fMAjjNprbU9lu02lKdn4qZtdssF4SYez/h8OWPHubl90yrZgPMSzYzlk4wlYATW0ixn7PXl/nzKEh+4qblCAzO2Bc9u5z/ObtqyheoZQqCVPiGK8aUWM7YKwZZp6sUKNPcTtGCo2KDTPNDULVPN3d+1PReoLQ+ykkqGbXqRZQXrMe4rFGwaKeAOxVqDCVGfOlBERONX0vo9rf0KrUVXW4cCvKd+tNrxNJfmgMkvT0BaCocemzChZnpHEUXyPIuRVkfA1TjAxQmgEPA2jjHtGSkphxxZj+MUB46sB5zvmRkAPIxDXO19+K3uOtKifFgadLxSRKIzSmibkwjunuS2G2JIy+f01dZy4/sxactuH/JpkRU/i+s81iust3extuGKiiztsvTN/oYm7LPZIfskl6tP0i9oT5MLDAH1f3nysahdF4WjxtBdYzTx7926LrBcQB8LVEhXhK8D7hBq4GycsvrH0TitG3Y+Rpoem96F+zGeC9ogtXyHe3QLh60HF9/GlcL28c+vnX7w65l/AAAA//8DAFBLAwQUAAYACAAAACEAFUHZuUYMAADydQAADwAAAHdvcmQvc3R5bGVzLnhtbNSdy3LcuBWG96nKO7B6lSzk1l22a+QpSZYj1Ui2ZlqO12gSrcaIJDokW5d5gTxCskxlkVXyWEkqbxEAJLtBHYLNA56oKhtbTfJ8BPHjB3B4/e77pyQOHniWC5kej3bebI8CnoYyEund8ejr7aett6MgL1gasVim/Hj0zPPR9x9+/avvHt/nxXPM80AB0vx9Eh6P5kWxeD8e5+GcJyx/Ixc8VStnMktYoX5md+OEZffLxVYokwUrxFTEonge725vH44qTNaHImczEfKPMlwmPC1M/DjjsSLKNJ+LRV7THvvQHmUWLTIZ8jxXB53EJS9hIl1hdvYBKBFhJnM5K96og6lKZFAqfGfb/JXEa8ABDrALAIchf8Ix3laMsYq0OSLCcQ5XHBFZHL/CWICc4xAHdTny50QfURK+v7xLZcamsSIpjQJVzYEB639VafV/5k+1+QfVYCMZfuQztoyLXP/MbrLqZ/XL/PdJpkUePL5neSjErSqXgidC7efiJM3FSK3hLC9OcsHslefVMr1+rjdsjQzzwlp8KiIxGuud3vMsVasfWHw82i0X5b+sFuzUS850ucpl++WymKV39TKebn2d2OU7Hv0y3zr7rBdN1a6ORyzbmpzowHF1uOX/ViUsVr/KrV7UmLKYMtyk9L1ay2dXMrzn0aRQK45H23pXauHXy5tMyEx5+3j07l21cMITcSGiiKfWhulcRPzbnKdfcx6tl//4yfizWhDKZar+3js6NCrGeXT+FPKFdrtamzJdoZ91QKy3Xor1zk34H2pYVY+t8XPOdJcX7LxEmOKjELs6IreOtp25fHHsZivUjvZea0f7r7Wjg9fa0eFr7ejotXb09rV2ZDD/yx2JNOJPpRHhbgB1E8fhRjTHYTY0x+ElNMdhFTTH4QQ0x9HQ0RxHO0ZzHM0UwSlk6GqFVmPfc7T2bu7mMcKPu3lI8ONuHgH8uJs7fD/u5v7dj7u5O/fjbu69/bibO2s8t5xqBZfKZmkx2GUzKYtUFjwo+NNwGksVy+SBNDw96PGM5CAJMGXPVg3Eg2khM783txBjUv/xvNAJWiBnwUzcLTOeDy44Tx94rBL5gEWR4hECM14sM0eN+LTpjM94xtOQUzZsOmgsUh6ky2RK0DYX7I6MxdOIuPpqIkmnsGrQbFnMtUkEQaNOWJjJ4UWTjKx/uBL58LrSkOB0GceciPWZpokZ1vDcwGCGpwYGMzwzMJjhiYGlGVUVVTSimqpoRBVW0YjqrWyfVPVW0YjqraIR1VtFG15vt6KITRdvzzp2+p+7O4ulPnM/uBwTcZcyNQEYPtxU50yDG5axu4wt5oE+q9yOtY8Zu59TGT0HtxRj2opENa83TeRMHbVIl8MrtEGjMteKR2SvFY/IYCvecItdq2mynqBd0OQzk+W0aDWtIfUy7YTFy3JCO9xtrBjewtYG+CSynMwG7ViCFvxZT2e1nBQ937qUwwu2Zg231cteibR4FZKglLEM72m64YvnBc9UWnY/mPRJxrF85BEdcVJksmxrtuV3jSS9LH+eLOYsFyZXaiD6D/X1Nf/gmi0GH9BNzERKo9v5VsJEHNDNIC5ur6+CW7nQaaauGBrgqSwKmZAxqzOBv/nGp7+lKeCJSoLTZ6KjPSE6PWRgZ4JgkClJMiIiqWmmSAXJGGp4P/DnqWRZREO7yXh5m03BiYgTlizKSQeBt1S/+Kj6H4LZkOH9nmVCnxeiMtUtCcw6bZgvpz/zcHhX91kGJGeGviwLc/7RTHVNNB1u+DShgRs+RTBqquFBt1+Cg23ghh9sA0d1sGcxy3PhvITqzaM63JpHfbzDk7+KJ2OZzZYxXQXWQLIarIFkVSjjZZLmlEdseIQHbHjUx0vYZAyP4JSc4f0uExGZGAZGpYSBUclgYFQaGBipAMPv0LFgw2/TsWDD79UpYURTAAtG1c5Ih3+iqzwWjKqdGRhVOzMwqnZmYFTtbO9jwGczNQmmG2IsJFWbs5B0A01a8GQhM5Y9EyHPY37HCE6QlrSbTM708xcyLW/iJkDqc9Qx4WS7xFGJ/I1PyYqmWZTlIjgjyuJYSqJza+sBx0Q2713bFGYewxhchJuYhXwu44hnjmNyx6p8ebJgYXWaHlzu63Xa80rczYtgMl+d7bcxh9sbI+uEvRG2eYdtdX5YPZ/SGnbNI7FM6oLChykO9/oHmxbdCK6feekIXs8kGpEHPSPhPg83R65nyY3Io56RcJ9ve0YanzYiu/zwkWX3rQ3hqKv9rHI8R+M76mpFq+DW3XY1pFVkWxM86mpFDasEJ2GorxZAdfp5xh3fzzzueIyL3BSMndyU3r5yI7oM9hN/EHpkx3SaZn+ruydAv28m0b16zh+Xsjxv37jg1P+hrks1cUpzHrRy9vpfuGr0Mu567N3duBG9+x03oncH5Eb06omc4aguyU3p3Te5Eb07KTcC3VvBEQHXW8F4XG8F4316K0jx6a0GzALciN7TATcCbVSIQBt1wEzBjUAZFYR7GRVS0EaFCLRRIQJtVDgBwxkVxuOMCuN9jAopPkaFFLRRIQJtVIhAGxUi0EaFCLRRPef2znAvo0IK2qgQgTYqRKCNauaLA4wK43FGhfE+RoUUH6NCCtqoEIE2KkSgjQoRaKNCBNqoEIEyKgj3MiqkoI0KEWijQgTaqOWjhv5GhfE4o8J4H6NCio9RIQVtVIhAGxUi0EaFCLRRIQJtVIhAGRWEexkVUtBGhQi0USECbVRzsXCAUWE8zqgw3seokOJjVEhBGxUi0EaFCLRRIQJtVIhAGxUiUEYF4V5GhRS0USECbVSI6Gqf1SVK1232O/izns479vtfuqoK9ZP9KLeN2uuPqkvlZvV/FuFUyvug9cHDPZNv9IOIaSykOUXtuKxuc80tEagLn1/Oup/wsekDX7pUPQthrpkC+H7fSHBOZb+ryduRIMnb72rpdiSYde539b52JBgG97s6XePL+qYUNRyB4K5uxgrecYR39dZWOKzirj7aCoQ13NUzW4Gwgrv6YyvwINCd88vog571dLi6vxQQupqjRThyE7qaJdSq7o6hMfqK5ib0Vc9N6Cujm4DS04nBC+tGoRV2o/ykhjbDSu1vVDcBKzUkeEkNMP5SQ5S31BDlJzXsGLFSQwJWav/O2U3wkhpg/KWGKG+pIcpPajiUYaWGBKzUkICVeuCA7MT4Sw1R3lJDlJ/UcHKHlRoSsFJDAlZqSPCSGmD8pYYob6khyk9qkCWjpYYErNSQgJUaErykBhh/qSHKW2qI6pLanEVpSI1S2ArHTcKsQNyAbAXiOmcr0CNbsqI9syWL4JktQa1qzXHZki2am9BXPTehr4xuAkpPJwYvrBuFVtiN8pMaly21Se1vVDcBKzUuW3JKjcuWOqXGZUudUuOyJbfUuGypTWpcttQmtX/n7CZ4SY3LljqlxmVLnVLjsiW31LhsqU1qXLbUJjUuW2qTeuCA7MT4S43LljqlxmVLbqlx2VKb1LhsqU1qXLbUJjUuW3JKjcuWOqXGZUudUuOyJbfUuGypTWpcttQmNS5bapMaly05pcZlS51S47KlTqlx2dK1ChEEr4CaJCwrArr3xV2wfF6w4S8n/JpmPJfxA48C2kO9Qh3l+LHx+SvNNh/AU9sXqs70G9Ctx5Wi8g2wFdBseKlIzHzBShciqL7aVX24ypS1ulJr/l6UnyN7FJF81I9vZzKuQ6om+nNYL5jKYl4V0YSNqz3CMoZzVciweumVq4zboJCO99maYqzbab11VfPrai23a1RqWVpHKQvti64S7jiqsXSUq1zvqi5iU8FUMaZxWf3qj8s0UoDH6mNiZQGjJ1ai1PozHsfXrNxaLtybxnxWlGt3ts0LDV6sn5bv5nPGZ6YTdwLGzcKUP7sbQ/m2/uruAldV77ZUtbnNZWgtu8vVMNK6JHugJOX9G2XtMUX9oh1u1lR1lur3fDYX6a5ttai6U6ClCVcesx2Z5UK3hNKC2+fbR+92z8qtKq/m5WPeapupfvMd15/pM0qymXLc+ha5tXF1b6+8aJbK8o1jVw9Nn9ee3vCBQvZzxwcK9UrnBwobkesPFOrFp6sPFE7Lf8/yUtrVtwn3Vl8rXH+bsFxmfWKwT18ULnPV+k3XCprgPhD+X3/543/++ufgn//407///rf2BlCP47bc1S0lbrndEv+/V379V/7hvwAAAP//AwBQSwMEFAAGAAgAAAAhALP5i8l1AQAAygIAABAACAFkb2NQcm9wcy9hcHAueG1sIKIEASigAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnFLLTsMwELwj8Q9R7q3T8qrQ1hVqhTjwkprC2bI3iYVjW7aL6N+zITQEcSOnndnd0czGsPpoTfaOIWpnl/lsWuQZWumUtvUy35W3k0WexSSsEsZZXOYHjPmKn57Ac3AeQ9IYM5KwcZk3KflrxqJssBVxSm1LncqFViSCoWauqrTEjZP7Fm1i86K4ZPiR0CpUEz8I5r3i9Xv6r6hysvMXX8qDJz0OJbbeiIT8sds0U+VSC2xgoXRJmFK3yBdEDwCeRY2Rz4D1Bby6oCI/o6G+gnUjgpCJDsjnsytgIww33hstRaLT8gctg4uuStnTl9+s2wc2HgHKsEW5DzodeAFsDOFe295IX5CxIOogfPPtbkCwlcLgmtLzSpiIwH4IWLvWC0tybKhI7y3ufOk23SG+V36To5CvOjVbLyRZmF+cj+OOOrAlFhX5HywMBNzRHwmm06ddW6M6zvxtdAd86Z8mn11OC/q+LnbkKPfwZvgnAAAA//8DAFBLAQItABQABgAIAAAAIQDfpNJsWgEAACAFAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVudF9UeXBlc10ueG1sUEsBAi0AFAAGAAgAAAAhAB6RGrfvAAAATgIAAAsAAAAAAAAAAAAAAAAAkwMAAF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgAAAAhANZks1H0AAAAMQMAABwAAAAAAAAAAAAAAAAAswYAAHdvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHNQSwECLQAUAAYACAAAACEAcf9upe0FAAC9JAAAEQAAAAAAAAAAAAAAAADpCAAAd29yZC9kb2N1bWVudC54bWxQSwECLQAUAAYACAAAACEAOgXMGeEGAADOIAAAFQAAAAAAAAAAAAAAAAAFDwAAd29yZC90aGVtZS90aGVtZTEueG1sUEsBAi0AFAAGAAgAAAAhACiV7k/NBAAAiA0AABEAAAAAAAAAAAAAAAAAGRYAAHdvcmQvc2V0dGluZ3MueG1sUEsBAi0AFAAGAAgAAAAhAJ1tDC2JAQAA6AIAABEAAAAAAAAAAAAAAAAAFRsAAGRvY1Byb3BzL2NvcmUueG1sUEsBAi0AFAAGAAgAAAAhAOWEDpsJAgAAOAYAABIAAAAAAAAAAAAAAAAA1R0AAHdvcmQvZm9udFRhYmxlLnhtbFBLAQItABQABgAIAAAAIQAJ7yRorgEAAMMEAAAUAAAAAAAAAAAAAAAAAA4gAAB3b3JkL3dlYlNldHRpbmdzLnhtbFBLAQItABQABgAIAAAAIQAVQdm5RgwAAPJ1AAAPAAAAAAAAAAAAAAAAAO4hAAB3b3JkL3N0eWxlcy54bWxQSwECLQAUAAYACAAAACEAs/mLyXUBAADKAgAAEAAAAAAAAAAAAAAAAABhLgAAZG9jUHJvcHMvYXBwLnhtbFBLBQYAAAAACwALAMECAAAMMQAAAAA=";
//	    String string = FileToBase64.encodeBase64File("C:/Users/lenovo/Desktop/三方平台/身份证后.jpg");
//		System.out.println(string);
//		String p = "d://";
//		String n = "1234.doc";
//		base64ToFile(p, a, n);
//		System.setProperty("webdriver.chrome.driver", "d:\\chromedriver.exe");
//		ChromeOptions chromeOptions = new ChromeOptions();
		// 设置 chrome 的无头模式
//		chromeOptions.setHeadless(Boolean.TRUE);
		// 启动一个 chrome 实例
//		WebDriver driver = new ChromeDriver();
		// WebDriver driver = new HtmlUnitDriver();
		// Thread.sleep(2000);
//		driver.manage().window().maximize();
//		driver.get("https://www.baidu.com");
//		WebElement w  = driver.findElement(By.cssSelector("#hotsearch-content-wrapper > li:nth-child(1) > a"));
//		for (WebElement webElement : w) {
//			System.out.println(w.getAttribute("href").toString());
//		}
	}
	 public static void base64ToFile(String filePath,String base64, String fileName) {
	        File file = null;
	        //创建文件目录
	        File  dir=new File(filePath);
	        if (!dir.exists() && !dir.isDirectory()) {
	            dir.mkdirs();
	        }
	        BufferedOutputStream bos = null;
	        java.io.FileOutputStream fos = null;
	        try {
	            byte[] bytes = Base64.decode(base64);
	            file=new File(filePath+"/"+fileName);
	            fos = new java.io.FileOutputStream(file);
	            bos = new BufferedOutputStream(fos);
	            bos.write(bytes);
	        } catch (Exception e) {
	            e.printStackTrace();
	        } finally {
	            if (bos != null) {
	                try {
	                    bos.close();
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	            if (fos != null) {
	                try {
	                    fos.close();
	                } catch (IOException e) {
	                    e.printStackTrace();
	                }
	            }
	        }
	    }
}
